{
   "claimTest1": {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
         "annotations": {
            "volume.beta.kubernetes.io/storage-class": "fast"
         },
         "labels": { },
         "name": "pvcName1",
         "namespace": "pvcNamespace1"
      },
      "spec": {
         "accessModes": [
            "ReadWrite"
         ],
         "resources": {
            "requests": {
               "storage": "2G"
            }
         }
      }
   },
   "configMapTest1": {
      "apiVersion": "v1",
      "data": {
         "datum1": "value1"
      },
      "kind": "ConfigMap",
      "metadata": {
         "annotations": { },
         "labels": { },
         "name": "configMap1",
         "namespace": "namespace1"
      }
   },
   "containerPortTest1": {
      "containerPort": 9090
   },
   "containerPortTest2": {
      "containerPort": 9091,
      "name": "containerPort1"
   },
   "containerPortTest3": {
      "containerPort": 9092,
      "hostIP": "127.0.0.2",
      "hostPort": 9093,
      "name": "containerPort2",
      "protocol": "UDP"
   },
   "deploymentTest1": {
      "apiVersion": "extensions/v1beta1",
      "kind": "Deployment",
      "metadata": {
         "annotations": { },
         "labels": { },
         "name": "hello"
      },
      "spec": {
         "minReadySeconds": 3,
         "selector": {
            "matchLabels": {
               "frog": "ribbit"
            }
         },
         "strategy": {
            "rollingUpdate": {
               "maxSurge": 1,
               "maxUnavailable": 1
            },
            "type": "RollingUpdate"
         }
      }
   },
   "metadataTest1": {
      "annotations": {
         "annotation1": "label1",
         "annotation2": "label2",
         "annotation3": "label3"
      },
      "labels": {
         "label1": "value1",
         "label2": "value2",
         "label3": "value3"
      },
      "name": "name1",
      "namespace": "namespace1"
   },
   "mountTest1": {
      "mountPath": "/path/to/mount1",
      "name": "volume1",
      "readOnly": false
   },
   "mountTest2": {
      "mountPath": "/path/to/mount2",
      "name": "mountPv1",
      "readOnly": false
   },
   "mountTest3": {
      "mountPath": "/path/to/mount2",
      "name": "mountConfigMap1",
      "readOnly": false
   },
   "namespaceTest1": {
      "apiVersion": "v1",
      "kind": "Namespace",
      "metadata": {
         "annotations": { },
         "labels": { },
         "name": "namespace1"
      }
   },
   "probeTest1": {
      "initialDelaySeconds": 1,
      "timeoutSeconds": 1
   },
   "probeTest2": {
      "httpGet": {
         "path": "/probePath1",
         "port": "probePort1"
      },
      "initialDelaySeconds": 3,
      "timeoutSeconds": 1
   },
   "probeTest3": {
      "initialDelaySeconds": 4,
      "tcpSocket": {
         "port": 33
      },
      "timeoutSeconds": 1
   },
   "probeTest4": {
      "exec": {
         "command": "execCommand1"
      },
      "initialDelaySeconds": 5,
      "timeoutSeconds": 1
   },
   "secretTest1": {
      "apiVersion": "v1",
      "data": {
         "secretKey1": "secretValue1"
      },
      "kind": "Secret",
      "metadata": {
         "annotations": { },
         "labels": { },
         "name": "secret1",
         "namespace": "namespace1"
      },
      "stringData": "data1",
      "type": "type1"
   },
   "servicePortTest1": {
      "port": 8080
   },
   "servicePortTest2": {
      "port": 8081,
      "targetPort": 8082
   },
   "servicePortTest3": {
      "name": "servicePort1",
      "port": 8083,
      "targetPort": 8084
   },
   "servicePortTest4": {
      "name": "servicePort2",
      "nodePort": 8087,
      "port": 8085,
      "protocol": "TCP",
      "targetPort": 8086
   },
   "serviceTest1": {
      "apiVersion": "v1",
      "kind": "Service",
      "metadata": {
         "annotations": { },
         "labels": { },
         "name": "serviceName1",
         "namespace": "namespace1"
      },
      "spec": {
         "externalName": "externalName1",
         "ports": [ ],
         "sessionAffinity": "ClientIP"
      }
   },
   "volumeConfigMap1": {
      "configMap": {
         "name": "configMapName1"
      },
      "name": "configMap1"
   },
   "volumeEmptyDir1": {
      "emptyDir": { },
      "name": "emptyDir1"
   },
   "volumeHostPathTest1": {
      "hostPath": {
         "path": "/path/to/nowhere"
      },
      "name": "hostPath1"
   },
   "volumePersistentTest1": {
      "name": "pv1",
      "persistentVolumeClaim": {
         "claimName": "pvc1"
      }
   },
   "volumePersistentTest2": {
      "name": "pv2",
      "persistentVolumeClaim": {
         "claimName": "pvc2"
      }
   },
   "volumeSecretTest1": {
      "name": "secretVolume1",
      "secret": {
         "secretName": "secretVolumeName1"
      }
   }
}
